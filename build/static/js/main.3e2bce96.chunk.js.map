{"version":3,"sources":["Recoil/globalState.js","modals/RegisterLoginModal.js","components/Register.js","components/Login.js","modals/Navdropdownmodal.js","components/Navdropdown.js","components/NavigationBar.js","components/Postnav.js","components/Filter.js","helpers/calccomments.js","components/Posts.js","modals/CreateCommPostModal.js","components/ModalCreateCommunity.js","components/MainCreatecommunity.js","components/Main.js","components/Subredditheader.js","components/SubredditInfo.js","components/Subredditposts.js","components/Subredditaddpost.js","components/Subredditcontainer.js","components/Commentspost.js","components/Commentspopup.js","components/Commentscomments.js","components/Commentscreatecomment.js","components/Commentscontainer.js","App.js","index.js"],"names":["isLogged","atom","key","default","RegisterLoginModal","handlestate","show","children","showHideClassName","className","type","onClick","Register","props","useState","User","setUser","Email","setEmail","Password","setPassword","ConfirmPassword","setConfirmPassword","submitForm","event","a","preventDefault","new_user","name","email","password","axios","post","then","data","id","onSubmit","placeholder","onChange","e","target","value","Login","useRecoilState","setLoggedInUser","newUser","user","token","localStorage","setItem","console","log","Navdropdownmodal","Navdropdown","to","icon","faShieldAlt","faBolt","faDigitalTachograph","faQuestion","faSignInAlt","NavigationBar","LoggedInUser","ShowModalLogin","setShowModalLogin","ShowModalRegister","setShowModalRegister","ShowDropDown","setShowDropDown","style","navbarStyle","imgStyle","src","alt","navsearchStyle","color","removeItem","userdivStyle","loginbuttonStyle","registerbuttonStyle","faUser","fontSize","faArrowDown","height","width","marginLeft","backgroundColor","display","justifyContent","alignItems","borderBottom","border","padding","borderRadius","marginRight","margin","Postnav","Filter","faBurn","marginTop","faAtom","faUpload","calccomments","comments","total","forEach","comment","length","Posts","intervalMs","setintervalMs","useQuery","get","refetchInterval","status","error","useEffect","message","map","faChevronUp","upvotes","includes","arrowstyle","arrowstyleupvoted","sreddit","spost","newUpvote","createdBy","config","headers","Authorization","alert","upvote","subreddit","title","downvotes","faChevronDown","newDownvote","downvote","url","textDecoration","formatted_title","content","faComment","CreateCommPostModal","ModalCreateCommunity","Community","setCommunity","Description","setDescription","newSubreddit","description","res","MainCreatecommunity","CreateCommunity","setCreateCommunity","Main","Subredditheader","headerstyle","backgroundImage","SubredditInfo","subredditName","subredditDesc","infocontainer","imgstyle","buttonstyle","Subredditposts","useRouteMatch","_id","Subredditaddpost","Title","setTitle","Text","setText","useParams","filterstyle","formstyle","newPost","window","inputstyletitle","textareastyle","inputstyletext","flexDirection","marginBottom","Subredditcontainer","isFetching","obj","posts","loadingstyle","Commentspost","contStyle","sup","sdown","borderBottomLeftRadius","borderBottomRightRadius","paddingBottom","Commentspopup","Comment","NestedComment","setNestedComment","newComment","Commentscomments","Popup","setPopup","formatdate","date","newDate","split","newDate2","replace","toString","shift","pop","usernamestyle","createdAt","commentcontainerstyle","commentstyle","sid","upvotesnum","class","borderLeft","Commentscreatecomment","setComment","Commentscontainer","minHeight","containerstyle","containerstyle2","borderTopLeftRadius","borderTopRightRadius","App","queryClient","QueryClient","getItem","catch","err","QueryClientProvider","client","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e2bce96.chunk.js","sourcesContent":["import { atom } from 'recoil'\r\n\r\nexport const isLogged = atom({\r\n    key: 'isLogged',\r\n    default: \"\",\r\n  });\r\n\r\n","import './RegisterLoginModal.css';\r\n\r\nexport const RegisterLoginModal = ({ handlestate, show, children }) => {\r\n    const showHideClassName = show ? \"modal display-block\" : \"modal display-none\";\r\n  \r\n    return (\r\n      <div className={showHideClassName}>\r\n        <section className=\"modal-main\">\r\n          <button type=\"button\" onClick={handlestate}>\r\n            <span>&#10005;</span>\r\n          </button>\r\n          {children}\r\n        </section>\r\n      </div>\r\n    );\r\n  };","import { useState } from \"react\"\r\nimport axios from 'axios'\r\n\r\nexport default function Register(props) {\r\n\r\n    const [User, setUser] = useState(\"\")\r\n    const [Email, setEmail] = useState(\"\")\r\n    const [Password, setPassword] = useState(\"\")\r\n    const [ConfirmPassword, setConfirmPassword] = useState(\"\")\r\n\r\n    const submitForm = async (event) => {\r\n        event.preventDefault();\r\n        if (Password === ConfirmPassword && User && Email) {\r\n            const new_user = {\r\n                name: User,\r\n                email: Email,\r\n                password: Password\r\n            }\r\n            await axios.post(\"https://fast-dawn-38066.herokuapp.com/api/authentication/register\", new_user)\r\n                .then((data) => {props.handlestate()})\r\n        }\r\n    }\r\n    return(\r\n        <div id=\"login-box\">\r\n            <div className=\"left\">\r\n                <form onSubmit={submitForm}>\r\n                    <h1>Sign up</h1>\r\n                    <input type=\"text\" name=\"username\" placeholder=\"Username\" onChange={(e) => setUser(e.target.value)}/>\r\n                    <input type=\"email\" name=\"email\" placeholder=\"E-mail\" onChange={(e) => setEmail(e.target.value)} />\r\n                    <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} />\r\n                    <input type=\"password\" name=\"password2\" placeholder=\"Retype password\" onChange={(e) => setConfirmPassword(e.target.value)} />\r\n                    <input type=\"submit\" name=\"signup_submit\" value=\"Sign me up\" />\r\n                </form>\r\n            </div>\r\n            \r\n            <div className=\"right\">\r\n                <span className=\"loginwith\">Sign in with<br />social network</span>\r\n                \r\n                <button className=\"social-signin facebook\">Log in with facebook</button>\r\n                <button className=\"social-signin twitter\">Log in with Twitter</button>\r\n                <button className=\"social-signin google\">Log in with Google+</button>\r\n            </div>\r\n            <div className=\"or\">OR</div>\r\n        </div>\r\n    )\r\n}","import { useState } from \"react\"\r\nimport { useRecoilState } from 'recoil'\r\nimport { isLogged } from \"../Recoil/globalState\"\r\nimport axios from 'axios'\r\n\r\n\r\nexport default function Login(props) {\r\n    const [LoggedInUser, setLoggedInUser] = useRecoilState(isLogged)\r\n    const [User, setUser] = useState(\"\")\r\n    const [Password, setPassword] = useState(\"\")\r\n    const [Errors, setErrors] = useState([])\r\n\r\n    const submitForm = (event) => {\r\n        event.preventDefault()\r\n        const newUser = {\r\n            name: User,\r\n            password: Password\r\n        }\r\n        axios.post(\"https://fast-dawn-38066.herokuapp.com/api/authentication/login\", newUser)\r\n            .then((data) => {if (data) {\r\n                setLoggedInUser({user: data.data.user,id: data.data.id, token: data.data.token})\r\n                localStorage.setItem('token', data.data.token)\r\n            } else {\r\n                console.log(\"False Username\")\r\n            }})\r\n    }\r\n\r\n    return(\r\n        <div id=\"login-box\">\r\n            <div className=\"left\">\r\n                <form onSubmit={submitForm}>\r\n                    <h1>Login</h1>\r\n                    <input type=\"text\" name=\"username\" placeholder=\"Username\" onChange={(e) => {setUser(e.target.value)}}/>\r\n                    <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={(e) => {setPassword(e.target.value)}}/>\r\n                    <input type=\"submit\" name=\"signup_submit\" value=\"Login\"/>\r\n                </form>\r\n            </div>\r\n            \r\n            <div className=\"right\">\r\n                <span className=\"loginwith\">Sign in with<br />social network</span>\r\n                <button className=\"social-signin facebook\">Log in with facebook</button>\r\n                <button className=\"social-signin twitter\">Log in with Twitter</button>\r\n                <button className=\"social-signin google\">Log in with Google+</button>\r\n            </div>\r\n            <div className=\"or\">OR</div>\r\n        </div>\r\n    )\r\n}","import './Navdropdownmodal.css';\r\n\r\nexport default function Navdropdownmodal ({ handlestate, show, children }) {\r\n    const showHideClassName = show ? \"modal1\" : \"modal1 display-none1\";\r\n  \r\n    return (\r\n      <div className={showHideClassName} onClick={handlestate}>\r\n        <section className=\"modal-main1\">\r\n          {children}\r\n        </section>\r\n      </div>\r\n    );\r\n  };\r\n\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSignInAlt, faBolt, faDigitalTachograph, faShieldAlt, faQuestion } from '@fortawesome/free-solid-svg-icons'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navdropdown(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <Link to=\"/premium\" className=\"dropdown-items\">\r\n                <FontAwesomeIcon className=\"dropdown-icon\" icon={faShieldAlt}/>\r\n                <h1 className=\"dropdown-text\">Premium</h1>\r\n            </Link>\r\n            <Link to=\"/powerup\" className=\"dropdown-items\">\r\n                <FontAwesomeIcon className=\"dropdown-icon\" icon={faBolt}/>\r\n                <h1 className=\"dropdown-text\">Powerups</h1>\r\n            </Link>\r\n            <Link to=\"/talk\" className=\"dropdown-items\">\r\n                <FontAwesomeIcon className=\"dropdown-icon\" icon={faDigitalTachograph}/>\r\n                <h1 className=\"dropdown-text\">Talk</h1>\r\n            </Link>\r\n            <Link to=\"/help-center\" className=\"dropdown-items\">\r\n                <FontAwesomeIcon className=\"dropdown-icon\" icon={faQuestion}/>\r\n                <h1 className=\"dropdown-text\">Help Center</h1>\r\n            </Link>\r\n            <div className=\"dropdown-items\">\r\n                <FontAwesomeIcon className=\"dropdown-icon\" icon={faSignInAlt}/>\r\n                <h1 className=\"dropdown-text dropdown-last\">Log In / Sign Up</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { Link } from \"react-router-dom\"\r\nimport { useState } from \"react\"\r\nimport { RegisterLoginModal } from \"../modals/RegisterLoginModal\"\r\nimport Register from \"./Register\"\r\nimport { useRecoilState } from 'recoil'\r\nimport { isLogged } from \"../Recoil/globalState\"\r\nimport Login from \"./Login\"\r\nimport Navdropdownmodal from \"../modals/Navdropdownmodal\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUser, faArrowDown } from '@fortawesome/free-solid-svg-icons'\r\nimport Navdropdown from \"./Navdropdown\"\r\n\r\nexport default function NavigationBar(props) {\r\n    const [LoggedInUser, setLoggedInUser] = useRecoilState(isLogged)\r\n    const [ShowModalLogin, setShowModalLogin] = useState(false)\r\n    const [ShowModalRegister, setShowModalRegister] = useState(false)\r\n    const [ShowDropDown, setShowDropDown] = useState(false)\r\n\r\n    const LogOut = () => {\r\n        setLoggedInUser(\"\")\r\n        localStorage.removeItem(\"token\")\r\n    }\r\n\r\n    if (LoggedInUser) {\r\n        return (\r\n            <div className=\"navbar\" style={navbarStyle}>\r\n                <Link to=\"/\">\r\n                    <img className=\"nav-img\" style={imgStyle} src=\"https://www.logo.wine/a/logo/Reddit/Reddit-Horizontal-White-Dark-Background-Logo.wine.svg\" alt=\"Reddit Logo\" />\r\n                </Link>\r\n                <input style={navsearchStyle} className=\"nav-search\"type=\"search\" id=\"search\" placeholder=\"search..\"></input>\r\n                <h1 style={{color: \"white\"}}>{LoggedInUser.user}</h1>\r\n                <button onClick={() => LogOut()}>Log Out</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else {\r\n        return(\r\n            <div className=\"navbar\" style={navbarStyle}>\r\n                <Link to=\"/\">\r\n                    <img className=\"nav-img\" style={imgStyle} src=\"https://www.logo.wine/a/logo/Reddit/Reddit-Horizontal-White-Dark-Background-Logo.wine.svg\" alt=\"Reddit Logo\" />\r\n                </Link>\r\n                <input style={navsearchStyle} className=\"nav-search\"type=\"search\" id=\"search\" placeholder=\"search..\"></input>\r\n                <div style={userdivStyle} className=\"userinfodiv\">\r\n                    <button style={loginbuttonStyle} onClick={() => setShowModalLogin(!ShowModalLogin)}>Log In</button>\r\n                    <button style={registerbuttonStyle} onClick={() => setShowModalRegister(!ShowModalRegister)}>Sign Up</button>\r\n                    <div>\r\n                        <div onClick={() => {setShowDropDown(!ShowDropDown)}}>\r\n                            <FontAwesomeIcon icon={faUser} style={{color: \"grey\", fontSize:\"20px\"}}  />\r\n                            <FontAwesomeIcon icon={faArrowDown} style={{color: \"grey\", fontSize:\"22px\"}}  />\r\n                        </div>\r\n                        <Navdropdownmodal LoggedInUser={LoggedInUser} show={ShowDropDown} handlestate={() => {setShowDropDown(!ShowDropDown)}}>\r\n                            <Navdropdown />\r\n                        </Navdropdownmodal>\r\n                    </div>\r\n                </div>\r\n                <RegisterLoginModal show={ShowModalLogin} handlestate={() => setShowModalLogin(!ShowModalLogin)}>\r\n                    <Login handlestate={() => setShowModalLogin(!ShowModalLogin)}/>\r\n                </RegisterLoginModal>\r\n                <RegisterLoginModal show={ShowModalRegister} handlestate={() => setShowModalRegister(!ShowModalRegister)}>\r\n                    <Register handlestate={() => setShowModalRegister(!ShowModalRegister)}/>\r\n                </RegisterLoginModal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst imgStyle = {\r\n    height: \"4rem\",\r\n    width: \"10rem\",\r\n    marginLeft: \"-100px\"\r\n}\r\nconst navbarStyle = {\r\n    backgroundColor: \"#212222\",\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-evenly\",\r\n    alignItems: \"center\",\r\n    borderBottom: \"grey thin solid\",\r\n}\r\nconst navsearchStyle = {\r\n    height: \"1rem\",\r\n    width: \"20rem\",\r\n    backgroundColor: \"#1a1a1b\",\r\n    border: \"grey thin solid\",\r\n    padding: \"20px\",\r\n    fontSize: \"15px\",\r\n    borderRadius: \"7px\"\r\n}\r\nconst userdivStyle = {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    width: \"300px\",\r\n    marginRight: \"-100px\"\r\n}\r\nconst loginbuttonStyle = {\r\n    backgroundColor: \"#212222\",\r\n    border: \"white solid thin\",\r\n    height: \"2rem\",\r\n    width: \"5rem\",\r\n    borderRadius: \"30px\",\r\n    color: \"white\",\r\n    margin: \"0\"\r\n}\r\nconst registerbuttonStyle = {\r\n    height: \"2rem\",\r\n    width: \"5rem\",\r\n    borderRadius: \"30px\",\r\n    border: \"black solid thin\",\r\n    margin: \"0\",\r\n    backgroundColor: \"rgb(230,230,230)\"\r\n}","export default function Postnav() {\r\n    return(\r\n        <>\r\n            <h4 style={{color: \"#E5E7E3\", margin: \"10px 0px\"}}>Popular posts</h4>\r\n        </>\r\n    )\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBurn, faArrowDown, faAtom, faUpload } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default function Filter() {\r\n    return(\r\n        <div className=\"filter\">\r\n            <div className=\"flex\">\r\n                <FontAwesomeIcon icon={faBurn} className=\"filter-icon\"/>\r\n                <h1 className=\"filter-text\">Hot</h1>\r\n            </div>\r\n            <div className=\"flex\">\r\n                <h1 className=\"filter-text\">Everywhere</h1>\r\n                <FontAwesomeIcon icon={faArrowDown} className=\"filter-icon\" style={{marginTop: \"4px\"}}/>\r\n            </div>\r\n            <div className=\"flex\">\r\n                <FontAwesomeIcon icon={faAtom} className=\"filter-icon\"/>\r\n                <h1 className=\"filter-text\">New</h1>\r\n            </div>\r\n            <div className=\"flex\">\r\n                <FontAwesomeIcon icon={faUpload} className=\"filter-icon\"/>\r\n                <h1 className=\"filter-text\">Top</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export default function calccomments(comments) {\r\n    let total = 0\r\n    comments.forEach((comment) => {\r\n        if (comment.comments.length > 0) {\r\n            total += 1\r\n            total += calccomments(comment.comments)\r\n        } else {\r\n            total += 1\r\n        }\r\n    })\r\n    return total\r\n}","import axios from 'axios'\r\nimport { useQuery } from 'react-query'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronDown, faChevronUp, faComment } from '@fortawesome/free-solid-svg-icons'\r\nimport { Link } from 'react-router-dom'\r\nimport calccomments from '../helpers/calccomments'\r\nimport { useRecoilState } from 'recoil';\r\nimport { isLogged } from '../Recoil/globalState'\r\nimport { useEffect, useState } from 'react'\r\n\r\nexport default function Posts(props) {\r\n\r\n    const [LoggedInUser] = useRecoilState(isLogged)\r\n    const [intervalMs, setintervalMs] = useState(\"\")\r\n\r\n    const { status, error, data } = useQuery(\"randomPosts\", async () => {\r\n        const { data } = await axios.get('https://fast-dawn-38066.herokuapp.com/api')\r\n        return data\r\n    },\r\n    {\r\n        refetchInterval: intervalMs,\r\n    }\r\n    );\r\n\r\n    const upvote = (sreddit, spost) => {\r\n        if (LoggedInUser) {\r\n            const newUpvote = {\r\n                createdBy: LoggedInUser.id\r\n            }\r\n            const config = {\r\n                headers: { Authorization: `Bearer ${LoggedInUser.token}`}\r\n            }\r\n            axios.post(`https://fast-dawn-38066.herokuapp.com/api/r/${sreddit}/upvote/${spost}`, newUpvote, config)\r\n                .then(() => setintervalMs(1))\r\n        } else {\r\n            alert(\"please log in to upvote\")\r\n        }\r\n    }\r\n    const downvote = (sreddit, spost) => {\r\n        if (LoggedInUser) {\r\n            const newDownvote = {\r\n                createdBy: LoggedInUser.id\r\n            }\r\n            const config = {\r\n                headers: { Authorization: `Bearer ${LoggedInUser.token}`}\r\n            }\r\n            axios.post(`https://fast-dawn-38066.herokuapp.com/api/r/${sreddit}/downvote/${spost}`, newDownvote, config)\r\n                .then(() => setintervalMs(1))\r\n        } else {\r\n            alert(\"please log in to upvote\")\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setintervalMs(\"\")\r\n    }, [data])\r\n\r\n    return (\r\n          <div className=\"posts\">\r\n              { status === \"loading\" ? <h1>Loading</h1> : \r\n                status === \"error\" ? <h1>{error.message}</h1>:\r\n                data ? data.map((post) => {\r\n                    return(\r\n                    <div className=\"post-container\">\r\n                        <div className=\"post-upvotes\">\r\n                            <FontAwesomeIcon icon={faChevronUp} style={post.upvotes.includes(LoggedInUser.id) ? arrowstyle : arrowstyleupvoted} onClick={() => upvote(post.subreddit.name, post.title)}/>\r\n                            <h2 style={{fontSize:\"20px\", color:\"rgb(231, 231, 231)\"}}>{post.upvotes.length - post.downvotes.length}</h2>\r\n                            <FontAwesomeIcon icon={faChevronDown} style={post.downvotes.includes(LoggedInUser.id) ? arrowstyle : arrowstyleupvoted} onClick={() => downvote(post.subreddit.name, post.title)}/>\r\n                        </div>\r\n                        <div className=\"post\">\r\n                            <div className=\"post-information\">\r\n                                <Link to={`${post.subreddit.url}`} style={{textDecoration: \"none\"}}>\r\n                                    <h2 className=\"default pi-h2\">/r/{post.subreddit.name}</h2>\r\n                                </Link>\r\n                                    <h3 className=\"default pi-h3\">Posted by\r\n                                        <Link to={`${post.createdBy.url}`} style={{textDecoration: \"none\", color:\"rgb(88, 80, 80)\"}}>\r\n                                            /u/{post.createdBy.name}\r\n                                        </Link>\r\n                                    </h3>\r\n                            </div>\r\n                            <Link to={`${post.subreddit.url}/comments/${post.title}`} style={{textDecoration: \"none\"}}>\r\n                                <div className=\"post-content\">\r\n                                    <h3 className=\"pc-h3\">{post.formatted_title}</h3>\r\n                                    <h1 className=\"pc-h1\">{post.content}</h1>\r\n                                </div>\r\n                                <div className=\"post-lower\">\r\n                                    <FontAwesomeIcon icon={faComment} style={{fontSize:\"15px\", color:\"rgb(231, 231, 231)\"}}/>\r\n                                    <h4 style={{color: \"white\", margin: \"0px 10px\"}}>{calccomments(post.comments)}</h4>\r\n                                    <h4 className=\"pl-h4\" style={{margin: \"0px\"}}>Comments</h4>\r\n                                </div>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                }): \"\"}\r\n          </div>\r\n      );\r\n\r\n}\r\n\r\nconst arrowstyle= {\r\n    fontSize:\"30px\",\r\n    color:\"rgb(231, 231, 231)\"\r\n}\r\nconst arrowstyleupvoted= {\r\n    fontSize:\"30px\",\r\n    color:\"rgb(50, 50, 50)\"\r\n}","\r\n\r\nexport default function CreateCommPostModal ({ handlestate, show, children }) {\r\n    const showHideClassName = show ? \"modal1\" : \"modal1 display-none1\";\r\n  \r\n    return (\r\n        <div className={showHideClassName}>\r\n          <section className=\"modal-main\">\r\n            <button type=\"button\" onClick={handlestate}>\r\n              <span>&#10005;</span>\r\n            </button>\r\n            {children}\r\n          </section>\r\n        </div>\r\n      );\r\n  };\r\n\r\n","import axios from \"axios\"\r\nimport { useState } from \"react\"\r\nimport { useRecoilState } from \"recoil\"\r\nimport { isLogged } from \"../Recoil/globalState\"\r\nimport { Redirect } from \"react-router\"\r\n\r\nexport default function ModalCreateCommunity() {\r\n\r\n    const [LoggedInUser] = useRecoilState(isLogged)\r\n    const [Community, setCommunity] = useState(\"\")\r\n    const [Description, setDescription] = useState(\"\")\r\n\r\n    console.log(LoggedInUser, Community)\r\n    const createCommunity = (event) => {\r\n        event.preventDefault()\r\n        const newSubreddit = {\r\n            name: Community,\r\n            description: Description\r\n        }\r\n        const config = {\r\n            headers: { Authorization: `Bearer ${LoggedInUser.token}` }\r\n        };\r\n        axios.post(\"https://fast-dawn-38066.herokuapp.com/api/r/createcommunity\", newSubreddit, config)\r\n            .then(res => res.status == 200 ?  setCommunity(\"\") : \"\")\r\n            .then(res => res.status == 200 ?  setDescription(\"\") : \"\")\r\n\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1>Name</h1>\r\n            <h3>Community names including capitalization cannot be changed.</h3>\r\n            <form onSubmit={createCommunity}>\r\n                <h1>r/<input placeholder={Community ? Community : \"Create a community...\"} onChange={(e) => setCommunity(e.target.value)}></input></h1>\r\n                <h3>Community description</h3>\r\n                <input placeholder={Description ? Description : \"Community description...\"} onChange={(e) => setDescription(e.target.value)}></input>\r\n                <button type=\"submit\">Create</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import { useRecoilState } from 'recoil';\r\nimport { isLogged } from \"../Recoil/globalState\"\r\nimport CreateCommPostModal from '../modals/CreateCommPostModal';\r\nimport { useState } from 'react';\r\nimport ModalCreateCommunity from './ModalCreateCommunity';\r\n\r\nexport default function MainCreatecommunity() {\r\n\r\n    const [LoggedInUser] = useRecoilState(isLogged)\r\n    const [CreateCommunity, setCreateCommunity] = useState(false)\r\n\r\n\r\n    if (LoggedInUser) {\r\n        return(\r\n            <div className=\"information2\">\r\n                <div className=\"cc-background\">\r\n                </div>\r\n                <img className=\"cc-img\" src=\"https://upload.wikimedia.org/wikipedia/fi/0/0e/Reddit_-_logo.png\"/>\r\n                <h1 style={{color: \"white\", fontSize: \"15px\", margin: \"5px\"}}>Your personal Reddit frontpage. Come here to check in with your favorite communities.</h1>\r\n                <div className=\"cc-buttons\">\r\n                    <CreateCommPostModal show={CreateCommunity} handlestate={() => setCreateCommunity(!CreateCommunity)}>\r\n                        <ModalCreateCommunity />\r\n                    </CreateCommPostModal>\r\n\r\n                    <button className=\"cc-btn cc-createpost\">Create a post</button>\r\n                    <button className=\"cc-btn cc-createcom\" onClick={() => setCreateCommunity(!CreateCommunity)}>Create community</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return(\r\n            <div className=\"information2\" style={{height: \"80px\"}}>\r\n                <h1 style={{color: \"white\"}}>Please Log in to create a community</h1>\r\n            </div>\r\n        )\r\n    }\r\n}","import Postnav from \"./Postnav\"\r\nimport Filter from \"./Filter\"\r\nimport Posts from \"./Posts\"\r\nimport MainCreatecommunity from \"./MainCreatecommunity\"\r\n\r\nexport default function Main() {\r\n    return(\r\n        <div className=\"main-background\">\r\n            <div className=\"main-container\">\r\n                <Postnav />\r\n                <div className=\"main-content\">\r\n                    <div className=\"main-postandfilter\">\r\n                        <Filter />\r\n                        <Posts />\r\n                    </div>\r\n                    <div className=\"sidebar\">\r\n                        <MainCreatecommunity />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export default function Subredditheader(props) {\r\n    return(\r\n        <div>\r\n            <div style={headerstyle}>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst headerstyle = {\r\n    height: \"150px\",\r\n    width: \"100vw\",\r\n    backgroundImage: \"url('https://blog.mystart.com/wp-content/uploads/shutterstock_330094100-e1538149486170.jpg')\"\r\n}","export default function SubredditInfo({subredditName, subredditDesc}) {\r\n    return(\r\n        <div style={infocontainer}>\r\n            <div style={{display: \"flex\", marginLeft: \"430px\" }}>\r\n                <img style={imgstyle} src=\"https://cdn.theorg.com/2f421c28-34f1-4bc8-b46c-497ad89d9dd2_medium.png\" alt=\"Infobackground\"/>\r\n                <div>\r\n                    <h1 style={{margin: \"0px\", color:\"rgb(210, 210, 210)\"}}>r/{subredditName} - {subredditDesc}</h1>\r\n                    <h4 style={{margin: \"0px\", color:\"rgb(140, 140, 140)\"}}>r/{subredditName}</h4>\r\n                </div>\r\n                <button style={buttonstyle}>\r\n                    Join\r\n                </button>\r\n            </div>\r\n            <div style={{marginLeft: \"450px\", display:\"flex\"}}>\r\n                <h5 style={{margin: \"0px 15px\", color:\"rgb(140, 140, 140)\"}}>Posts</h5>\r\n                <h5 style={{margin: \"0px 15px\", color:\"rgb(140, 140, 140)\"}}>Rules</h5>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst imgstyle = {\r\n    marginTop: \"-40px\",\r\n    height: \"110px\",\r\n    width: \"110px\",\r\n    borderRadius: \"50%\"\r\n}\r\nconst infocontainer = {\r\n    backgroundColor: \"#212222\", \r\n    height: \"90px\",\r\n}\r\nconst buttonstyle = {\r\n    width: \"85px\",\r\n    height: \"30px\",\r\n    margin: \"0px 50px\",\r\n    marginTop: \"5px\",\r\n    borderRadius: \"30px\",\r\n    backgroundColor: \"rgb(210, 210, 210)\",\r\n    fontSize: \"17px\"\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faComment, faChevronDown, faChevronUp } from '@fortawesome/free-solid-svg-icons'\r\nimport { Link } from 'react-router-dom';\r\nimport { useRouteMatch } from 'react-router';\r\nimport calccomments from '../helpers/calccomments'\r\nimport { useRecoilState } from 'recoil';\r\nimport { isLogged } from '../Recoil/globalState'\r\nimport axios from 'axios';\r\n\r\nexport default function Subredditposts({ data }) {\r\n\r\n    const { url } = useRouteMatch()\r\n    const [LoggedInUser] = useRecoilState(isLogged)\r\n\r\n    const upvote = (sreddit, spost) => {\r\n        if (LoggedInUser) {\r\n            const newUpvote = {\r\n                createdBy: LoggedInUser.id\r\n            }\r\n            const config = {\r\n                headers: { Authorization: `Bearer ${LoggedInUser.token}`}\r\n            }\r\n            axios.post(`https://fast-dawn-38066.herokuapp.com/api/r/${sreddit}/upvote/${spost}`, newUpvote, config)\r\n                .then((res) => console.log(res))\r\n        } else {\r\n            alert(\"please log in to upvote\")\r\n        }\r\n    }\r\n    const downvote = (sreddit, spost) => {\r\n        if (LoggedInUser) {\r\n            const newDownvote = {\r\n                createdBy: LoggedInUser.id\r\n            }\r\n            const config = {\r\n                headers: { Authorization: `Bearer ${LoggedInUser.token}`}\r\n            }\r\n            axios.post(`https://fast-dawn-38066.herokuapp.com/api/r/${sreddit}/downvote/${spost}`, newDownvote, config)\r\n                .then((res) => console.log(res))\r\n                \r\n        } else {\r\n            alert(\"please log in to upvote\")\r\n        }\r\n    }\r\n\r\n    return (\r\n          <div className=\"posts\">\r\n              {\r\n                data.map((post) => {\r\n                    return(\r\n                    <div className=\"post-container\" key={post._id}>\r\n                        <div className=\"post-upvotes\">\r\n                            <FontAwesomeIcon icon={faChevronUp} style={post.upvotes.includes(LoggedInUser.id) ? arrowstyle : arrowstyleupvoted} className=\"subredditposts-icon\" onClick={() => upvote(post.subreddit.name, post.title)}/>\r\n                            <h2 className=\"subredditposts-upvnum\">{post.upvotes.length - post.downvotes.length}</h2>\r\n                            <FontAwesomeIcon icon={faChevronDown} style={post.downvotes.includes(LoggedInUser.id) ? arrowstyle : arrowstyleupvoted} className=\"subredditposts-icon\"onClick={() => downvote(post.subreddit.name, post.title)}/>\r\n                        </div>\r\n                        <div className=\"post\">\r\n                            <div className=\"post-information\">\r\n                                    <h2 className=\"default pi-h2\">/r/{post.subreddit.name}</h2>\r\n                                    <h3 className=\"default pi-h3\">Posted by\r\n                                            /u/{post.createdBy.name}\r\n                                    </h3>\r\n                            </div>\r\n                                <Link style={{textDecoration: \"none\"}} to={`${url}/comments/${post.title}`}>\r\n                                <div className=\"post-content\">\r\n                                    <h3 className=\"pc-h3\">{post.formatted_title}</h3>\r\n                                    <h1 className=\"pc-h1\">{post.content}</h1>\r\n                                </div>\r\n                                    <div className=\"post-lower\">\r\n                                        <FontAwesomeIcon icon={faComment} style={{fontSize:\"15px\", color:\"rgb(231, 231, 231)\"}}/>\r\n                                        <h4 style={{color: \"white\", margin: \"0px 10px\"}}>{calccomments(post.comments)||0}</h4>\r\n                                        <h4 className=\"pl-h4\" style={{margin: \"0px\"}}>Comments</h4>\r\n                                    </div>\r\n                                </Link>\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                })\r\n                }\r\n          </div>\r\n      );\r\n\r\n}\r\n\r\nconst arrowstyle= {\r\n    fontSize:\"30px\",\r\n    color:\"rgb(231, 231, 231)\"\r\n}\r\nconst arrowstyleupvoted= {\r\n    fontSize:\"30px\",\r\n    color:\"rgb(50, 50, 50)\"\r\n}","import { useParams } from \"react-router-dom\"\r\nimport { useState } from \"react\"\r\nimport { useRecoilState } from 'recoil';\r\nimport { isLogged } from \"../Recoil/globalState\"\r\nimport axios from \"axios\";\r\n\r\nexport default function Subredditaddpost() {\r\n\r\n    const [ Title, setTitle ] = useState(\"\")\r\n    const [ Text, setText ] = useState(\"\")\r\n    const { subreddit } = useParams()\r\n    const [LoggedInUser] = useRecoilState(isLogged)\r\n\r\n    const Submitpost = (event) => {\r\n        event.preventDefault()\r\n        if (Title && Text) {\r\n            const newPost = {\r\n                title: Title,\r\n                content: Text\r\n            }\r\n            const config = {\r\n                headers: { Authorization: `Bearer ${LoggedInUser.token}` }\r\n            }\r\n            axios.post(`https://fast-dawn-38066.herokuapp.com/api/r/${subreddit}/post`, newPost, config)\r\n                .then((res) => console.log(res))\r\n        } else {\r\n            window.alert(\"Please Add Title!\")\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n        <div style={filterstyle}>\r\n            <form style={formstyle} onSubmit={Submitpost}>\r\n                <input type=\"text\" placeholder=\"Title\" style={inputstyletitle} onChange={(e) => setTitle(e.target.value)}></input>\r\n                <textarea style={textareastyle} type=\"text\" placeholder=\"Text\" onChange={(e) => setText(e.target.value)}></textarea>\r\n                <button type=\"submit\" style={inputstyletext}>Create post</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst inputstyletext = {\r\n    marginTop: \"10px\",\r\n    backgroundColor: \"#5F5654\",\r\n    borderRadius: \"20px\",\r\n    width: \"150px\",\r\n    color: \"white\"\r\n}\r\nconst textareastyle = {\r\n    marginTop: \"10px\",\r\n    backgroundColor: \"#5F5654\",\r\n    borderRadius: \"20px\",\r\n    color: \"white\"\r\n}\r\nconst inputstyletitle = {\r\n    width: \"100%\",\r\n    backgroundColor: \"#5F5654\",\r\n    borderRadius: \"5px\",\r\n    color: \"white\"\r\n}\r\nconst formstyle = {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    width: \"90%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n}\r\nconst filterstyle = {\r\n    backgroundColor: \"#212222\",\r\n    borderRadius: \"5px\",\r\n    border: \"solid grey thin\",\r\n    padding: \"5px 0px\",\r\n    height: \"180px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"15px\"\r\n}","import { useParams } from \"react-router\"\r\nimport { useQuery } from \"react-query\";\r\nimport axios from \"axios\";\r\nimport Filter from \"./Filter\";\r\nimport Subredditheader from \"./Subredditheader\";\r\nimport SubredditInfo from \"./SubredditInfo\";\r\nimport Subredditposts from \"./Subredditposts\";\r\nimport Subredditaddpost from \"./Subredditaddpost\";\r\nimport { useRecoilState } from 'recoil';\r\nimport { isLogged } from \"../Recoil/globalState\"\r\n\r\n\r\n\r\nexport default function Subredditcontainer() {\r\n\r\n    const { subreddit } = useParams()\r\n    const [LoggedInUser] = useRecoilState(isLogged)\r\n\r\n    const { status, error, data, isFetching } = useQuery(\"subredditPosts\", async () => {\r\n        const { data } = await axios.get(`https://fast-dawn-38066.herokuapp.com/api/r/${subreddit}`)\r\n        return data\r\n    });\r\n    return(\r\n        <div>\r\n            {data ? <>\r\n            <Subredditheader />\r\n            <SubredditInfo subredditName={data ? data.obj.name : \"\"} subredditDesc={data ? data.obj.description : \"\"}/>\r\n            <div className=\"main-background\">\r\n                <div className=\"main-container\">\r\n                    <div className=\"main-content\" style={{marginTop: \"25px\"}}>\r\n                        <div className=\"main-postandfilter\">\r\n                            {LoggedInUser ? <Subredditaddpost /> : \"\"}\r\n                            <Filter />\r\n                            <Subredditposts data={data ? data.obj.posts : \"\"}/>\r\n                        </div>\r\n                        <div className=\"information\">\r\n                            <h1>TESTinformation</h1>\r\n                            {console.log(data.obj.posts)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </>:\r\n            <div style={loadingstyle}>\r\n                <h1>Loading...</h1>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst loadingstyle = {\r\n    backgroundColor:\"rgb(50, 50, 50)\",\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n}\r\n","import { faComment, faChevronDown, faChevronUp } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport calccomments from '../helpers/calccomments'\r\nimport { useRecoilState } from 'recoil'\r\nimport { isLogged } from '../Recoil/globalState'\r\nimport axios from 'axios'\r\n\r\nexport default function Commentspost({ data }) {\r\n\r\n    const [LoggedInUser] = useRecoilState(isLogged)\r\n\r\n    const upvote = (sreddit, spost, sup, sdown) => {\r\n        if (LoggedInUser) {\r\n            const newUpvote = {\r\n                createdBy: LoggedInUser.id\r\n            }\r\n            const config = {\r\n                headers: { Authorization: `Bearer ${LoggedInUser.token}`}\r\n            }\r\n            axios.post(`https://fast-dawn-38066.herokuapp.com/api/r/${sreddit}/upvote/${spost}`, newUpvote, config)\r\n                .then((res) => console.log(res))\r\n        } else {\r\n            alert(\"please log in to upvote\")\r\n        }\r\n    }\r\n    const downvote = (sreddit, spost, sup, sdown) => {\r\n        if (LoggedInUser) {\r\n            const newDownvote = {\r\n                createdBy: LoggedInUser.id\r\n            }\r\n            const config = {\r\n                headers: { Authorization: `Bearer ${LoggedInUser.token}`}\r\n            }\r\n            axios.post(`https://fast-dawn-38066.herokuapp.com/api/r/${sreddit}/downvote/${spost}`, newDownvote, config)\r\n                .then((res) => console.log(res))\r\n                \r\n        } else {\r\n            alert(\"please log in to upvote\")\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"post-container\" style={contStyle}>\r\n            <div className=\"post-upvotes\" style={{backgroundColor: \"#212222\"}}>\r\n                <FontAwesomeIcon icon={faChevronUp} style={{fontSize:\"30px\", color:\"rgb(231, 231, 231)\"}} onClick={() => upvote(data.subreddit.name, data.title)}/>\r\n                <h2 style={{fontSize:\"20px\", color:\"rgb(231, 231, 231)\"}}>{data? data.upvotes.length - data.downvotes.length: \"\"}</h2>\r\n                <FontAwesomeIcon icon={faChevronDown} style={{fontSize:\"30px\", color:\"rgb(231, 231, 231)\"}} onClick={() => downvote(data.subreddit.name, data.title)}/>\r\n            </div>\r\n            <div className=\"post\">\r\n                <div className=\"post-information\">\r\n                        <h3 className=\"default pi-h3\">\r\n                            Posted by {data ? data.createdBy.url: \"\"}\r\n                        </h3>\r\n                </div>\r\n                    <div className=\"post-content\">\r\n                        <h3 className=\"pc-h3\">{data.formatted_title}</h3>\r\n                        <h1 className=\"pc-h1\">{data.content}</h1>\r\n                    </div>\r\n                    <div className=\"post-lower\">\r\n                        <FontAwesomeIcon icon={faComment} style={{fontSize:\"15px\", color:\"rgb(231, 231, 231)\"}}/>\r\n                        <h4 style={{color: \"white\", margin: \"0px 10px\"}}>{data ? calccomments(data.comments) : \"\"}</h4>\r\n                        <h4 className=\"pl-h4\" style={{margin: \"0px\"}}>Comments</h4>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst contStyle = {\r\n    marginBottom: \"0px\",\r\n    borderBottomLeftRadius: \"0px\",\r\n    borderBottomRightRadius: \"0px\",\r\n    paddingBottom: \"50px\"\r\n}","import { useState } from \"react\"\r\nimport { useParams } from \"react-router\"\r\nimport axios from \"axios\"\r\n\r\nexport default function Commentspopup({Comment, LoggedInUser}) {\r\n\r\n    const { post, subreddit } = useParams()\r\n\r\n    const [NestedComment, setNestedComment] = useState(\"\")\r\n    const createcomment = (e) => {\r\n        e.preventDefault()\r\n        if (Comment) {\r\n            const newComment = {\r\n                content: NestedComment,\r\n                createdBy: LoggedInUser.id\r\n            }\r\n            const config = {\r\n                headers: { Authorization: `Bearer ${LoggedInUser.token}`}\r\n            }\r\n            axios.post(`https://fast-dawn-38066.herokuapp.com/api/r/${subreddit}/comments/${post}/${Comment}`, newComment, config)\r\n                .then((res) => {console.log(res)})\r\n                .then(() => setNestedComment(\"\"))\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <form onSubmit={createcomment}>\r\n                <textarea onChange={(e) => setNestedComment(e.target.value)} value={NestedComment ? NestedComment : \"\"}></textarea>\r\n                <input type=\"submit\" value=\"Reply\"/>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronDown, faChevronUp, faComment } from '@fortawesome/free-solid-svg-icons'\r\nimport { useRecoilState } from 'recoil';\r\nimport { isLogged } from '../Recoil/globalState'\r\nimport { useState } from 'react';\r\nimport Commentspopup from './Commentspopup';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router';\r\n\r\n\r\nexport default function Commentscomments({ data }) {\r\n\r\n    const [LoggedInUser] = useRecoilState(isLogged)\r\n    const [Popup, setPopup] = useState(\"\")\r\n    const { subreddit, post } = useParams()\r\n\r\n    function formatdate(date) {\r\n        let newDate = date.split(\"-\")\r\n        let newDate2 = newDate[2].split(\".\")\r\n        newDate2 = newDate2[0].replace(/[^a-z^0-9]+/g, \" \");\r\n        newDate2 = newDate2.split(\" \")\r\n        newDate[2] = newDate2[0].toString()\r\n        newDate2.shift()\r\n        newDate2.pop()\r\n        newDate2 = newDate2.toString().replace(/,/g, \":\")\r\n        const theDate = `${newDate2} ${newDate[2]}/${newDate[1]}`\r\n        return theDate\r\n    }\r\n\r\n    function alertUser() {\r\n        alert(\"Please Log In!\");\r\n        setPopup(\"\")\r\n    }\r\n    const upvote = (sid) => {\r\n        if (LoggedInUser) {\r\n            const newUpvote = {\r\n                createdBy: LoggedInUser.id\r\n            }\r\n            const config = {\r\n                headers: { Authorization: `Bearer ${LoggedInUser.token}`}\r\n            }\r\n            axios.post(`https://fast-dawn-38066.herokuapp.com/api/r/${subreddit}/upvote/${post}/${sid}`, newUpvote, config)\r\n                .then((res) => console.log(res))\r\n        } else {\r\n            alert(\"please log in to upvote\")\r\n        }\r\n    }\r\n    const downvote = (sid) => {\r\n        console.log(\"GG\")\r\n        if (LoggedInUser) {\r\n            const newDownvote = {\r\n                createdBy: LoggedInUser.id\r\n            }\r\n            const config = {\r\n                headers: { Authorization: `Bearer ${LoggedInUser.token}`}\r\n            }\r\n            axios.post(`https://fast-dawn-38066.herokuapp.com/api/r/${subreddit}/downvote/${post}/${sid}`, newDownvote, config)\r\n                .then((res) => console.log(res))\r\n        } else {\r\n            alert(\"please log in to upvote\")\r\n        }\r\n    }\r\n\r\n    return(\r\n            <div className=\"comments\" style={{margin: \"10px 45px\"}}>\r\n                {data ? data.map((comment) => {\r\n                    return(\r\n                        <div className=\"comment\" key={data._id}>\r\n                            <div className=\"single-header\" style={{display: \"flex\"}}>\r\n                                <img style={{borderRadius: \"50%\", width: \"20px\"}} src=\"https://cdn.theorg.com/2f421c28-34f1-4bc8-b46c-497ad89d9dd2_medium.png\" />\r\n                                <h3 style={usernamestyle}>{comment.createdBy.url} · {formatdate(comment.createdAt)}</h3>\r\n                            </div>\r\n                            <div className=\"single-comment\" style={commentcontainerstyle}>\r\n                                <div>\r\n                                    <h2 style={commentstyle}>{comment.content}</h2>\r\n                                    <div style={{display: \"flex\", margin: \"5px 10px\"}}>\r\n                                                <FontAwesomeIcon icon={faChevronUp} style={comment.upvotes.includes(LoggedInUser.id) ? arrowstyle : arrowstyleupvoted} onClick={() => upvote(comment._id)}/>\r\n                                                <h3 style={upvotesnum}>{comment.upvotes.length - comment.downvotes.length}</h3>\r\n                                                <FontAwesomeIcon icon={faChevronDown} style={comment.downvotes.includes(LoggedInUser.id) ? arrowstyle : arrowstyleupvoted} onClick={() => downvote(comment._id)}/>\r\n                                                <div class=\"comment-popup\" style = {{display: \"flex\"}} onClick={() => setPopup(Popup !== comment._id ? comment._id : \"\")}>\r\n                                                    <h3 style={upvotesnum}>Reply</h3>\r\n                                                    <FontAwesomeIcon icon={faComment} style={{fontSize:\"15px\", color:\"rgb(231, 231, 231)\"}}/>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div>\r\n                                                {Popup === comment._id && LoggedInUser ? <Commentspopup LoggedInUser={LoggedInUser} Comment={comment._id}/> : Popup === comment._id && !LoggedInUser ? alertUser() : \"\"}\r\n                                            </div>\r\n                                </div>\r\n                                {comment.comments.length > 0 ? <Commentscomments data={comment.comments} /> : \"\"}\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }): \"\"}\r\n            </div>\r\n    )\r\n}\r\n\r\nconst commentcontainerstyle = {\r\n    borderLeft: \"2px solid grey\",\r\n    margin: \"4px 0px 9px 9px\"\r\n}\r\nconst usernamestyle = {\r\n    color:\"rgb(210, 210, 210)\",\r\n    marginLeft: \"5px\",\r\n    fontSize: \"11px\",\r\n    marginTop: \"2px\"\r\n}\r\nconst commentstyle = {\r\n    color:\"rgb(210, 210, 210)\",\r\n    marginLeft: \"5px\"\r\n}\r\nconst upvotesnum = {\r\n    color:\"rgb(210, 210, 210)\",\r\n    fontSize: \"11px\",\r\n    margin: \"0px 8px\"\r\n}\r\nconst arrowstyle= {\r\n    fontSize:\"15px\",\r\n    color:\"rgb(231, 231, 231)\"\r\n}\r\nconst arrowstyleupvoted= {\r\n    fontSize:\"15px\",\r\n    color:\"rgb(50, 50, 50)\"\r\n}","import { useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport axios from \"axios\"\r\nimport { useParams } from \"react-router\"\r\n\r\nexport default function Commentscreatecomment({LoggedInUser}) {\r\n\r\n    const [Comment, setComment] = useState(\"\")\r\n    const { post, subreddit } = useParams()\r\n    const createcomment = (e) => {\r\n        e.preventDefault()\r\n        if (Comment) {\r\n            const newComment = {\r\n                content: Comment,\r\n                createdBy: LoggedInUser.id\r\n            }\r\n            const config = {\r\n                headers: { Authorization: `Bearer ${LoggedInUser.token}`}\r\n            }\r\n            axios.post(`https://fast-dawn-38066.herokuapp.com/api/r/${subreddit}/comments/${post}`, newComment, config)\r\n                .then((res) => {console.log(res)})\r\n                .then(() => setComment(\"\"))\r\n        } else {\r\n            window.alert(\"empty comment\")\r\n        }\r\n    }\r\n    if (LoggedInUser) {\r\n        return(\r\n            <div style={commentstyle}>\r\n                <h3 style={{color: \"white\"}}>Comment as: <Link style={{color: \"teal\", }}>{LoggedInUser.user}</Link></h3>\r\n                <form onSubmit={createcomment}>\r\n                    <textarea onChange={(e) => setComment(e.target.value)} value={Comment ? Comment : \"\"}></textarea>\r\n                    <input type=\"submit\" style={{marginTop: \"0px\"}} value=\"Comment\"/>\r\n                </form>\r\n            </div>\r\n        )\r\n    } else {\r\n        return \"\"\r\n    }\r\n}\r\n\r\nconst commentstyle = {\r\n    backgroundColor: \"#212222\",\r\n    width: \"750px\"\r\n}","import Commentspost from \"./Commentspost\";\r\nimport Commentscomments from \"./Commentscomments\";\r\nimport axios from \"axios\";\r\nimport Commentscreatecomment from \"./Commentscreatecomment\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useParams } from \"react-router\";\r\nimport { isLogged } from \"../Recoil/globalState\";\r\nimport { useRecoilState } from \"recoil\";\r\n\r\nexport default function Commentscontainer() {\r\n\r\n    const [LoggedInUser] = useRecoilState(isLogged)\r\n    const { subreddit, post } = useParams()\r\n    const { status, error, data, isFetching } = useQuery(\"Fullpostinfo\", async () => {\r\n        const { data} = await axios.get(`https://fast-dawn-38066.herokuapp.com/api/r/${subreddit}/comments/${post}`)\r\n        return data\r\n    });\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"background\"style={{backgroundColor: \"#0C0C0C\", minHeight: \"92.9vh\", display: \"flex\", justifyContent:\"center\"}}>\r\n                <div style={containerstyle}>\r\n                    <div className=\"main-content\" style={{marginTop: \"25px\"}}>\r\n                        <div className=\"postandfilter\" style={{width: \"750px\"}}>\r\n                            <Commentspost data={data ? data : \"\"}/>\r\n                            <Commentscreatecomment LoggedInUser={LoggedInUser}/>\r\n                            <div className=\"post-container\" style={containerstyle2}>\r\n                                <Commentscomments data={data ? data.comments : \"\"}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"information\">\r\n                            <h1 style={{color: \"wheat\"}}>TESTinformation</h1>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst containerstyle = {\r\n    width: \"75rem\",\r\n    backgroundColor: \"black\",\r\n    minHeight: \"92.8vh\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\"\r\n}\r\nconst containerstyle2 = {\r\n    marginTop: \"0px\",\r\n    borderTopLeftRadius: \"0px\",\r\n    borderTopRightRadius: \"0px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    paddingBottom: \"40px\"\r\n}","import { useRecoilState } from 'recoil';\nimport { isLogged } from './Recoil/globalState'\nimport { useEffect } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport NavigationBar from './components/NavigationBar';\nimport axios from 'axios';\nimport Main from './components/Main';\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport Subredditcontainer from './components/Subredditcontainer'\nimport Commentscontainer from './components/Commentscontainer';\nimport \"./css/main.css\"\n\nexport default function App() {\n\n  const queryClient = new QueryClient();\n\n  const [LoggedInUser, setLoggedInUser] = useRecoilState(isLogged)\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      setLoggedInUser({token: token})\n      const config = {\n        headers: { Authorization: `Bearer ${token}` }\n    };\n      axios.post(\"https://fast-dawn-38066.herokuapp.com/api/verifytoken\", {}, config)\n        .then((res) => {\n          setLoggedInUser({user: res.data.name, id:res.data.id, token: token})\n        })\n        .catch((err) => {\n          console.log(err)\n          setLoggedInUser(\"\")\n          localStorage.removeItem(\"token\")\n        })\n    }\n  }, [])\n\n  return (\n    <Router>\n      <NavigationBar />\n      <QueryClientProvider client={queryClient}>\n          <Switch>\n          <Route exact path=\"/r/:subreddit/comments/:post\">\n              <Commentscontainer />\n            </Route>\n            <Route exact path=\"/r/:subreddit\">\n              <Subredditcontainer />\n            </Route>\n            <Route exact path=\"/\">\n                <Main />\n            </Route>\n          </Switch>\n        </QueryClientProvider>\n    </Router>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { RecoilRoot } from 'recoil';\n\nReactDOM.render(\n  <RecoilRoot>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </RecoilRoot>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}